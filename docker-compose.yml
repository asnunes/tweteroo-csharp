version: '3.8'
services:
  tweteroo-csharp:
    image: tweteroo-csharp:latest
    container_name: tweteroo-csharp
    network_mode: host
    environment:
      - DATABASE__HOST=localhost
      - DATABASE__PORT=5432
      - DATABASE__USERNAME=${POSTGRES_USER}
      - DATABASE__PASSWORD=${POSTGRES_PASSWORD}
      - DATABASE__NAME=${POSTGRES_DB}
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ~/.microsoft/usersecrets:/root/.microsoft/usersecrets:ro

  db:
    image: postgres:13-alpine
    container_name: db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    network_mode: host
    volumes:
      - ~/data/docker/postgres/db:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  migrate:
    image: tweteroocsharp-migrate
    container_name: migrate
    network_mode: host
    environment:
      - DATABASE__HOST=localhost
      - DATABASE__PORT=5432
      - DATABASE__USERNAME=${POSTGRES_USER}
      - DATABASE__PASSWORD=${POSTGRES_PASSWORD}
      - DATABASE__NAME=${POSTGRES_DB}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:1.25.3-alpine
    network_mode: host
    restart: unless-stopped
    volumes:
      - ./.deploy/nginx/:/etc/nginx/conf.d/:ro
      - ~/data/docker/certbot/www:/var/www/certbot/:ro
      - ~/data/docker/certbot/conf/:/etc/nginx/ssl/:ro

  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    network_mode: host
    volumes:
      - ~/data/docker/certbot/www/:/var/www/certbot/:rw
      - ~/data/docker/certbot/conf/:/etc/letsencrypt/:rw
